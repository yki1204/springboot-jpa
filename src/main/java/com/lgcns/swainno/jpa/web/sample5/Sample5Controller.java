package com.lgcns.swainno.jpa.web.sample5;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

/**
 * 
 * @author ssj
 *
 */
@Controller // This means that this class is a Controller
@RequestMapping(path="/sample5/members") // This means URL's start with /demo (after Application path)
public class Sample5Controller {
	  @Autowired // This means to get the bean called companyRepository
      // Which is auto-generated by Spring, we will use it to handle the data
	  private CompanyRepository companyRepository;
	  @Autowired
	  private MemberRepository memberRepository;
	  @Autowired
	  private OrderInfoRepository orderRepository;

	  @PostMapping(path="/company/add") // Map ONLY POST Requests
	  public @ResponseBody String addNewCompany (@RequestParam String name) {
		  // @ResponseBody means the returned String is the response, not a view name
		  // @RequestParam means it is a parameter from the GET or POST request

		  Company n = new Company();
		  n.setName(name);

		  companyRepository.save(n);
		  return "Saved";
	  }

	  @GetMapping(path="/company/all")
	  public @ResponseBody Iterable<Company> getAllCompanies() {
		  // This returns a JSON or XML with the users
		  return companyRepository.findAll();
	  }
	  
	  @PostMapping(path="/member/add") // Map ONLY POST Requests
	  public @ResponseBody String addNewMember (@RequestParam String name, @RequestParam Integer age, @RequestParam Integer company_id) {
		  // @ResponseBody means the returned String is the response, not a view name
		  // @RequestParam means it is a parameter from the GET or POST request

		  Member n = new Member();
		  n.setName(name);
		  n.setAge(age);
		  n.setCompanyId(company_id);		
		  
		  if(memberRepository==null) System.out.println("NULLLLLLLLLLL");
		  System.out.println(n.toString());
		  memberRepository.save(n);
		  return "Saved";
	  }

	  @GetMapping(path="/member/all")
	  public @ResponseBody Iterable<Member> getAllMembers() {
		  // This returns a JSON or XML with the users
		  return memberRepository.findAll();
	  }
	  
	  @PostMapping(path="/order/add") // Map ONLY POST Requests
	  public @ResponseBody String addNewOrder (@RequestParam String product, @RequestParam Integer price, @RequestParam Integer member_id) {
		  // @ResponseBody means the returned String is the response, not a view name
		  // @RequestParam means it is a parameter from the GET or POST request

		  OrderInfo n = new OrderInfo();
		  n.setProduct(product);
		  n.setPrice(price);
		  n.setMemberId(member_id);
		  
		  orderRepository.save(n);
		  return "Saved";
	  }

	  @GetMapping(path="/order/all")
	  public @ResponseBody Iterable<OrderInfo> getAllOrders() {
		  // This returns a JSON or XML with the users
		  return orderRepository.findAll();
	  }
}
